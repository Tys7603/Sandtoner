apply from: "config.gradle"

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localProperties.load(new FileInputStream(localPropertiesFile))
}
def jfrogUsername = localProperties.getProperty("JFROG_USERNAME") ?: ""
def jfrogPassword = localProperties.getProperty("JFROG_PASSWORD") ?: ""

buildscript {
    repositories {
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
        maven { url 'https://maven.aliyun.com/repository/jcenter' }
        maven {
            url "https://mvn.mob.com/android"
        }
        google()
        mavenCentral()

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.2.0'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
        classpath 'com.jakewharton:butterknife-gradle-plugin:10.2.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.8.21"

    }
}

allprojects {
    repositories {
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
        maven { url "https://jitpack.io" }
        maven { url 'https://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'https://maven.aliyun.com/repository/jcenter' }

        maven {url 'https://git.baijiashilian.com/open-android/maven/raw/master/' }
        maven {
            url "https://mvn.mob.com/android"
        }
        google()
        mavenCentral()

        maven {
            url  "https://cardinalcommerceprod.jfrog.io/artifactory/android"
            credentials {
                username = jfrogUsername
                password = jfrogPassword
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

def releaseTime() {
    def date = new Date()
    def formattedDate = date.format('MMdd_HHmm')
    return formattedDate
}